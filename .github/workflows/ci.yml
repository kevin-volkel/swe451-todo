name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('todo-app/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: List files (debugging)
      run: ls -R
      working-directory: ./todo-app

    - name: Run Unit Tests
      run: mvn test
      working-directory: ./todo-app

    - name: Package Application (if tests pass)
      run: mvn clean package -DskipTests
      working-directory: ./todo-app

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: todoapp-jar
        path: ./todo-app/target/*.jar

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: todoapp-jar
        path: ./deploy

    - name: Debug EC2 Host secret
      run: |
        echo "EC2 Host: ${{ secrets.EC2_HOST }}"

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

    - name: Deploy JAR to EC2
      run: |
        scp ./deploy/*.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/todo-app/todoapp.jar
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pkill -f 'java -jar' || true && nohup java -jar /home/${{ secrets.EC2_USER }}/todo-app/todoapp.jar > /home/${{ secrets.EC2_USER }}/todo-app/app.log 2>&1 &"
